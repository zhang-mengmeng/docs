import{_ as i,c as a,a2 as t,o as n}from"./chunks/framework.DD8U72qy.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pwa.md","filePath":"pwa.md","lastUpdated":1731340955000}'),p={name:"pwa.md"};function e(l,s,h,k,o,r){return n(),a("div",null,s[0]||(s[0]=[t(`<h3 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">​</a></h3><p><code>PWA（Progressive Web App，渐进式 Web 应用）</code>是一种能够提供类似本地应用体验的 Web 应用。PWA 结合了传统网页和原生应用的优点，具有响应迅速、离线访问、主动通知等特性，用户可以像访问网站一样使用它们，也可以将其安装到设备上，像原来的应用一样运行。</p><h3 id="三大核心" tabindex="-1">三大核心 <a class="header-anchor" href="#三大核心" aria-label="Permalink to &quot;三大核心&quot;">​</a></h3><h4 id="渐进式web应用-manifest-json" tabindex="-1">渐进式web应用 <code>manifest.json</code> <a class="header-anchor" href="#渐进式web应用-manifest-json" aria-label="Permalink to &quot;渐进式web应用 \`manifest.json\`&quot;">​</a></h4><ul><li>使用方法 通过link标签去引入</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;manifest&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fref</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./manifest.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ul><li><strong>manifest.json中常见的字段及其作用</strong></li></ul><p><code>name</code>:</p><p>应用程序的全名，会在启动时和应用程序管理器中显示。</p><p>示例：&quot;name&quot;: &quot;My Progressive Web App&quot;</p><p><code>short_name</code>:</p><p>应用的简单来说，当空间有限时显示，例如在主屏幕图标下方。</p><p>示例：&quot;short_name&quot;: &quot;MyPWA&quot;</p><p><code>start_url</code>:</p><p>应用启动时的起始页面。常设置为首页或入口页面的URL。</p><p>示例：&quot;start_url&quot;: &quot;/index.html&quot;</p><p><code>icons</code>:</p><p>定义应用的图标，以适应不同的屏幕分辨率和设备。</p><p><code>display</code>:</p><p>控制应用的显示模式。可选值包括：</p><p>fullscreen：全屏模式，不显示浏览器UI。</p><p>standalone：独立模式，相似应用，隐藏浏览器地址栏。</p><p>minimal-ui：提供一些基础的浏览器UI，如返回按钮。</p><p>browser：标准浏览器模式，和普通网页相同。</p><p><code>background_color</code>:</p><p>启动屏幕的背景颜色，加载页面时会显示在屏幕后面。</p><p>示例：&quot;background_color&quot;: &quot;#ffffff&quot;</p><p><code>theme_color</code>:</p><p>设置应用程序的主题颜色，通常用于浏览器的地址栏或任务栏颜色。</p><p>示例：&quot;theme_color&quot;: &quot;#4CAF50&quot;</p><p><code>orientation</code>:</p><p>指定应用的默认屏幕方向，如portrait</p><p>示例：&quot;orientation&quot;: &quot;portrait&quot;</p><ul><li><strong>manifest.json 配置示例</strong></li></ul><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;APP&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 应用的名称</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;short_name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;App&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//短名称，如果name过长或者没有就使用这个</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;display&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;standalone&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// standalone 没有导航页面类似于APP</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;start_url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 配置路径</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;icons&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:[ </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 配置图标</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;src&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> , </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//路径</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;sizes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;256*256&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 大小</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;image/png&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 类型 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="离线缓存技术-service-worker" tabindex="-1">离线缓存技术 <code>service worker</code> <a class="header-anchor" href="#离线缓存技术-service-worker" aria-label="Permalink to &quot;离线缓存技术 \`service worker\`&quot;">​</a></h4><ul><li><strong>声明周期</strong>：</li></ul><ol><li>注册</li></ol><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">navigator.serviceWorker.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;路径&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 返回一个promise</span></span></code></pre></div><ol start="2"><li>安装</li></ol>`,40)]))}const c=i(p,[["render",e]]);export{E as __pageData,c as default};
